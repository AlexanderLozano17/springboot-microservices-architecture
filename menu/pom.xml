<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.2.0</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<groupId>com.menu</groupId>
	<artifactId>menu</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Menu Service</name>
	<description>Microservicio para gestión de menú</description>

	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<!--Para evitar problemas con la codificación-->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<org.mapstruct.version>1.5.5.Final</org.mapstruct.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>
		<spock-spring.version>2.4-M4-groovy-4.0</spock-spring.version>
		<lombok.version>1.18.30</lombok.version>
	</properties>

	<dependencies>

		<!-- ========== SPRING BOOT CORE ========== -->

		<!-- Web Starter: incluye Spring MVC, Tomcat embebido, Jackson, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!-- Starter base: configuración, logging, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!-- Soporte para acceso a base de datos con Spring Data JPA (Hibernate) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Validaciones con anotaciones como @NotNull, @Size, etc. -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<!-- ========== MAPSTRUCT (mapeo DTO ↔ Entidades) ========== -->

		<!-- Librería principal de MapStruct para mapeo automático entre clases -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>

		<!-- Procesador de anotaciones necesario para que MapStruct genere
		código -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>

		<!-- Permite compatibilidad entre Lombok y MapStruct -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok-mapstruct-binding</artifactId>
			<version>${lombok-mapstruct-binding.version}</version>
		</dependency>

		<!-- ========== DOCUMENTACIÓN OPENAPI / SWAGGER ========== -->

		<!-- Generación automática de documentación OpenAPI con interfaz Swagger -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.0.2</version>
		</dependency>

		<!-- ========== HATEOAS (hipermedia en APIs REST) ========== -->

		<!-- Permite añadir enlaces a las respuestas RESTful (principio HATEOAS) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>

		<!-- ========== SPRING REST DOCS (documentación basada en pruebas)
		========== -->

		<!-- Generación de documentación técnica a partir de pruebas con MockMvc -->
		<dependency>
			<groupId>org.springframework.restdocs</groupId>
			<artifactId>spring-restdocs-mockmvc</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- ========== TESTING ========== -->

		<!-- Dependencias para pruebas unitarias y de integración (JUnit,
		Mockito, etc.) -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- ========== BASE DE DATOS ========== -->

		<!-- Base de datos en memoria para pruebas y desarrollo -->
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- ========== UTILIDADES DE DESARROLLO ========== -->

		<!-- Lombok: genera getters, setters, constructores, etc. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>

		<!-- Devtools: permite reinicio en caliente durante el desarrollo -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- ========== DEPENDENCIA COMPARTIDA: CONFIGURACIÓN KAFKA ========== -->

		<!-- Módulo propio que contiene configuración común para Kafka -->
		<dependency>
			<groupId>com.kafka-common</groupId>
			<artifactId>kafka-common</artifactId>
			<version>0.0.1-SNAPSHOT</version>
		</dependency>

	</dependencies>
	
	<build>
		<plugins>
			<!-- Lombok para anotaciones -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>

			<!-- Plugin de Spring Boot -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
